image: python:latest

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DISPLAY: ":99"

cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - build  #(clone todomvs, run with python -m http.server for example)
  - test   #(if build, then use local todomvc server from)
  - report

fake_build:
  stage: build
  script:
  - echo "FAKE STEPS, NOT IMPLEMENTED"
  - echo "git clone todomvc"
  - echo "run server with python for example"

run tests:
  stage: test
  script:
  # install google chrome
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
  - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
  - apt-get -y update
  - apt-get install -y google-chrome-stable

  # install chromedriver
  - apt-get install -yqq unzip
  - wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip
  - unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/

  # install Firefox:
  - apt-get -y update
  - apt-get -y install firefox-esr

  # install geckodriver
  - wget https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz
  - sh -c 'tar -x geckodriver -zf geckodriver-v0.24.0-linux64.tar.gz -O > /usr/bin/geckodriver'
  - chmod +x /usr/bin/geckodriver
  - rm geckodriver-v0.24.0-linux64.tar.gz

  - python3 -V
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt
  - python -m pytest ./tests
  artifacts:
    paths:
    - ./tests/logs/report

pages:
  stage: report
  script:
  # install allure cmd
  - apt-get -y update
  - apt-get -y install default-jre
  - curl -o allure-2.6.0.tgz -Ls https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/2.6.0/allure-2.6.0.tgz
  - tar -zxvf allure-2.6.0.tgz -C /opt/
  - ln -s /opt/allure-2.6.0/bin/allure /usr/bin/allure
  - allure --version
  # generate html report
  - allure generate ./tests/logs/report --output ./tests/logs/report_html
  - mv ./tests/logs/report_html public/
  when: always
  artifacts:
    paths:
      - public
